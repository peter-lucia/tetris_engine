name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_rust:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Rust Library Build
      run: cargo build --verbose
    - name: Rust Library tests
      run: cargo test --verbose


  release:
    needs: build_rust
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip
          - target: x86_64-unknown-linux-musl
            archive: tar.gz tar.xz
          - target: x86_64-apple-darwin
            archive: zip
    steps:
    - name: Compile and release
      uses: rust-build/rust-build.action@v1.3.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        RUSTTARGET: ${{ matrix.target }}
        ARCHIVE_TYPES: ${{ matrix.archive }}

  build_python:
    needs: build_rust
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build Python Package
      uses: actions/setup-python@v4
    - run: python setup.py build --verbose
